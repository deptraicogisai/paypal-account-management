'use client'
import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "../globals.css";
// import Header from "../components/header";
import { signOut, useSession } from "next-auth/react";
import { Button, Layout, Menu, MenuProps, theme, Tooltip } from 'antd';
import { useState } from "react";
import { DesktopOutlined, LogoutOutlined, SettingOutlined, UserOutlined } from "@ant-design/icons";
import { usePathname } from "next/navigation";
import Link from "next/link";
const { Header, Sider, Content, Footer } = Layout;
type MenuItem = Required<MenuProps>['items'][number];

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

// Helper to wrap label with Link
function getItem(
  label: React.ReactNode,
  key: React.Key,
  icon?: React.ReactNode,
  href?: string,
  children?: MenuItem[],
): MenuItem {
  return {
    key,
    icon,
    children,
    label: href ? <Link href={href}>{label}</Link> : label,
  } as MenuItem;
}

const items: MenuItem[] = [
  getItem('Account', '', <UserOutlined />, '/'),
  getItem('Setting', '/settings', <SettingOutlined />, '/settings')
];

// export const metadata: Metadata = {
//   title: "Paypal Account Management",
//   description: "Generated by create next app",
// };

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {

  const [collapsed, setCollapsed] = useState(false);
  const pathname = usePathname();
  const {
    token: { colorBgContainer, borderRadiusLG },
  } = theme.useToken();

  const { data: session, status } = useSession();

  // Set selected key based on current path
  const selectedKey = items.find(item => {
    if (typeof item?.key === "string" && item.key !== "") {
      return pathname.startsWith(item.key);
    }
    // Home/root
    return pathname === "/" && item?.key === "";
  })?.key ?? "";

  const handleLogout = async () => {
    await signOut(); // change if your login path differs
  };

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <Layout style={{ minHeight: '100vh' }}>
          <Sider collapsible collapsed={collapsed} onCollapse={(value) => setCollapsed(value)}>
            <div className="demo-logo-vertical" />
            <div>
              <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', padding: '24px 0 12px 0' }}>
                <img src="/image/paypal.png" width={60} height={60} alt="Vietnam Flag" style={{ marginBottom: 8 }} />
                {collapsed ? (
                  <></>
                ) : (
                  <span style={{ color: 'white', fontWeight: 'bold', fontSize: 16, letterSpacing: 1, display: 'flex', width: '100%', textAlign: 'center' }}>
                    PAYPAL ACCOUNT MANAGEMENT
                  </span>
                )}
              </div>
              <hr style={{ borderTop: '1px solid white', margin: '0 16px 16px 16px' }} />
            </div>
            <Menu
              theme="dark"
              selectedKeys={[selectedKey]}
              mode="inline"
              items={items}
            />
            <div style={{ padding: 12 }} className="mb-3">
              <div>
                <span style={{ color: 'white', display: 'flex', alignItems: 'center', justifyContent: 'center', gap: 8 }}>
                  {collapsed ? (
                    <Tooltip title={session?.user?.name?.toUpperCase()}>
                      <Button
                        type="text"
                        icon={<UserOutlined />}
                        style={{ width: '100%', color: 'white' }}
                      />
                    </Tooltip>
                  ) : (
                    <span style={{ color: 'white', display: 'flex', alignItems: 'center', justifyContent: 'center', gap: 8 }}>
                      {session?.user?.name?.toUpperCase()}
                    </span>
                  )}
                </span>
              </div>
              {collapsed ? (
                <Tooltip title="Logout">
                  <Button
                    type="text"
                    icon={<LogoutOutlined />}
                    danger
                    onClick={handleLogout}
                    style={{ width: '100%' }}
                  />
                </Tooltip>
              ) : (
                <Button
                  type="text"
                  icon={<LogoutOutlined />}
                  danger
                  block
                  onClick={handleLogout}
                >
                  Logout
                </Button>
              )}
            </div>
          </Sider>
          <Layout>
            <Header style={{ padding: 0, background: colorBgContainer }}>
              {/* <PageTitle /> */}
            </Header>
            <Content style={{ margin: '0 16px' }}>
              <div
                style={{
                  padding: 24,
                  minHeight: 360,
                  background: colorBgContainer,
                  borderRadius: borderRadiusLG,
                }}
              >
                {children}
              </div>
            </Content>
            <Footer style={{ textAlign: 'center' }}>
              Paypal Account Management Â©{new Date().getFullYear()} Created by DHV
            </Footer>
          </Layout>
        </Layout>
      </body>
    </html>
  );
}
